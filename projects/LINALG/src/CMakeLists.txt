# LINALG --------------------------------------------------------------------
# -------------------------------------------------------------------------

# Set version
set(${LINALG}_VERSION ${MORIS_VERSION})

# List header files
set(HEADERS
cl_Matrix.hpp
fn_all_true.hpp
fn_chol_l.hpp
fn_chol_u.hpp
fn_comp_abs.hpp
fn_cond.hpp
fn_cross.hpp
fn_ctrans.hpp
fn_det.hpp
fn_diag_mat.hpp
fn_diag_vec.hpp
fn_dot.hpp
fn_eig_gen.hpp
fn_eig_sym.hpp
fn_eye.hpp
fn_find_unique.hpp
fn_find.hpp
fn_histc.hpp
fn_inv.hpp
fn_iscol.hpp
fn_isempty.hpp
fn_isfinite.hpp
fn_isrow.hpp
fn_issquare.hpp
fn_isvector.hpp
fn_linsolve.hpp
fn_linspace.hpp
fn_load_matrix_from_binary_file.hpp
fn_lu.hpp
fn_norm.hpp
fn_print.hpp
fn_prod.hpp
fn_qr.hpp
fn_r2.hpp
fn_reshape.hpp
fn_save_matrix_to_binary_file.hpp
fn_sort.hpp
fn_sum.hpp
fn_svd.hpp
fn_trans.hpp
fn_unique.hpp
linalg_typedefs.hpp
main.cpp
op_div.hpp
op_elemwise_div.hpp
op_elemwise_mult.hpp
op_equal_equal.hpp
op_greater_equal.hpp
op_greater.hpp
op_less_equal.hpp
op_less.hpp
op_minus.hpp
op_move.hpp
op_not_equal.hpp
op_plus.hpp
op_times.hpp
)
    
if(MORIS_USE_EIGEN)
list(APPEND HEADERS
Eigen_Impl/cl_Matrix_Eigen_3x1.hpp
Eigen_Impl/cl_Matrix_Eigen_3x3.hpp
Eigen_Impl/cl_Matrix_Eigen_Dynamic.hpp
Eigen_Impl/fn_chol_l_Eigen.hpp
Eigen_Impl/fn_chol_u_Eigen.hpp
Eigen_Impl/fn_comp_abs_Eigen.hpp
Eigen_Impl/fn_cond_Eigen.hpp
Eigen_Impl/fn_cross_Eigen.hpp
Eigen_Impl/fn_ctrans_Eigen.hpp
Eigen_Impl/fn_det_Eigen.hpp
Eigen_Impl/fn_diag_mat_Eigen.hpp
Eigen_Impl/fn_diag_vec_Eigen.hpp
Eigen_Impl/fn_dot_Eigen.hpp
Eigen_Impl/fn_eig_gen_Eigen.hpp
Eigen_Impl/fn_eig_sym_Eigen.hpp
Eigen_Impl/fn_eye_Eigen.hpp
Eigen_Impl/fn_find_Eigen.hpp
Eigen_Impl/fn_find_unique_Eigen.hpp
Eigen_Impl/fn_histc_Eigen.hpp
Eigen_Impl/fn_inv_Eigen.hpp
Eigen_Impl/fn_iscol_Eigen.hpp
Eigen_Impl/fn_isempty_Eigen.hpp
Eigen_Impl/fn_isfinite_Eigen.hpp
Eigen_Impl/fn_isrow_Eigen.hpp
Eigen_Impl/fn_issquare_Eigen.hpp
Eigen_Impl/fn_isvector_Eigen.hpp
Eigen_Impl/fn_linsolve_Eigen.hpp
Eigen_Impl/fn_linspace_Eigen.hpp
Eigen_Impl/fn_lu_Eigen.hpp
Eigen_Impl/fn_norm_Eigen.hpp
Eigen_Impl/fn_qr_Eigen.hpp
Eigen_Impl/fn_reshape_Eigen.hpp
Eigen_Impl/fn_sort_Eigen.hpp
Eigen_Impl/fn_sum_Eigen.hpp
Eigen_Impl/fn_svd_Eigen.hpp
Eigen_Impl/fn_trans_Eigen.hpp
Eigen_Impl/fn_unique_Eigen.hpp
Eigen_Impl/op_elemwise_div_Eigen.hpp
Eigen_Impl/op_elemwise_mult_Eigen.hpp
Eigen_Impl/op_equal_equal_Eigen.hpp
Eigen_Impl/op_greater_Eigen.hpp
Eigen_Impl/op_greater_equal_Eigen.hpp
Eigen_Impl/op_less_Eigen.hpp
Eigen_Impl/op_less_equal_Eigen.hpp
Eigen_Impl/op_minus_Eigen.hpp
Eigen_Impl/op_not_equal_Eigen.hpp
Eigen_Impl/op_plus_Eigen.hpp
Eigen_Impl/op_times_Eigen.hpp)
endif()

if(MORIS_USE_ARMA)
list(APPEND HEADERS
Arma_Impl/cl_Matrix_Arma_Dynamic.hpp
Arma_Impl/fn_chol_l_Arma.hpp
Arma_Impl/fn_chol_u_Arma.hpp
Arma_Impl/fn_comp_abs_Arma.hpp
Arma_Impl/fn_cond_Arma.hpp
Arma_Impl/fn_cross_Arma.hpp
Arma_Impl/fn_ctrans_Arma.hpp
Arma_Impl/fn_det_Arma.hpp
Arma_Impl/fn_diag_mat_Arma.hpp
Arma_Impl/fn_diag_vec_Arma.hpp
Arma_Impl/fn_dot_Arma.hpp
Arma_Impl/fn_eig_gen_Arma.hpp
Arma_Impl/fn_eig_sym_Arma.hpp
Arma_Impl/fn_eye_Arma.hpp
Arma_Impl/fn_find_Arma.hpp
Arma_Impl/fn_find_unique_Arma.hpp
Arma_Impl/fn_histc_Arma.hpp
Arma_Impl/fn_inv_Arma.hpp
Arma_Impl/fn_iscol_Arma.hpp
Arma_Impl/fn_isempty_Arma.hpp
Arma_Impl/fn_isfinite_Arma.hpp
Arma_Impl/fn_isrow_Arma.hpp
Arma_Impl/fn_issquare_Arma.hpp
Arma_Impl/fn_isvector_Arma.hpp
Arma_Impl/fn_linsolve_Arma.hpp
Arma_Impl/fn_linspace_Arma.hpp
Arma_Impl/fn_lu_Arma.hpp
Arma_Impl/fn_norm_Arma.hpp
Arma_Impl/fn_qr_Arma.hpp
Arma_Impl/fn_reshape_Arma.hpp
Arma_Impl/fn_sort_Arma.hpp
Arma_Impl/fn_sum_Arma.hpp
Arma_Impl/fn_svd_Arma.hpp
Arma_Impl/fn_trans_Arma.hpp
Arma_Impl/fn_unique_Arma.hpp
Arma_Impl/op_elemwise_div_Arma.hpp
Arma_Impl/op_elemwise_mult_Arma.hpp
Arma_Impl/op_equal_equal_Arma.hpp
Arma_Impl/op_greater_Arma.hpp
Arma_Impl/op_greater_equal_Arma.hpp
Arma_Impl/op_less_Arma.hpp
Arma_Impl/op_less_equal_Arma.hpp
Arma_Impl/op_minus_Arma.hpp
Arma_Impl/op_not_equal_Arma.hpp
Arma_Impl/op_plus_Arma.hpp
Arma_Impl/op_times_Arma.hpp
    )
endif()


# List header dependencies
set(LINALG_INCLUDES
    ${COM})

foreach(LINALG_INCLUDE ${LINALG_INCLUDES})
    include_directories(../../${LINALG_INCLUDE}/src)
endforeach()

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Linear Algebra Library
add_library(${LINALG}-lib INTERFACE)
target_include_directories(${LINALG}-lib INTERFACE
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> 
	$<BUILD_INTERFACE:${LINALG_IMPLEMENTATION_INCLUDES}>)

foreach(TPL ${LINALG_LIB_TPL_DEPENDENCIES})
	string(TOLOWER ${TPL} tpl)
    include(${MORIS_TPL_DIR}/${tpl}_new.cmake)
    target_link_libraries(${LINALG}-lib
    	INTERFACE ${tpl})
    
    string(TOUPPER ${TPL} TPL)
    target_include_directories(${LINALG}-lib
    	INTERFACE ${MORIS_${TPL}_LIBRARY_DIRS} ${MORIS_${TPL}_INCLUDE_DIRS})
    target_compile_definitions(${LINALG}-lib
    	INTERFACE ${MORIS_${TPL}_DEFINITIONS})
endforeach()

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Linear Algebra Executable

if(BUILD_LINALG)
	# LINALG Executable
	# List source files
	set(EXE_SOURCES
	        main.cpp)
	
	# List library dependencies
	set(EXE_DEPENDENCIES 
		${LINALG}-lib
		#${MORIS_ARMADILLO_EIGEN_LIBS} 
		${MORIS_BASE_LIBS}
		${COM}-lib
		#${MORIS_ACML_LAPACK_MKL_LIBS}
	    #${MORIS_SUPERLU_LIBS}
	    )
	
	# Remove duplicate dependencies
	# REVERSE is required to maintain proper linking order
	list(REVERSE EXE_DEPENDENCIES)
	list(REMOVE_DUPLICATES EXE_DEPENDENCIES)
	list(REVERSE EXE_DEPENDENCIES)
		
	# Set the output path for library
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/${bin})
	
	# Create library
	add_executable(${LINALG} ${EXE_SOURCES})
	target_link_libraries(${LINALG} PRIVATE ${EXE_DEPENDENCIES})
	target_include_directories(${LINALG} PRIVATE ${MORIS_PACKAGE_DIR}/XTK/include)
	
	foreach(TPL ${LINALG_EXE_TPL_DEPENDENCIES})
		string(TOLOWER ${TPL} tpl)
	    include(${MORIS_TPL_DIR}/${tpl}_new.cmake)
	    
	    string(TOUPPER ${TPL} TPL)
	    target_include_directories(${LINALG} 
	    	PRIVATE ${MORIS_${TPL}_LIBRARY_DIRS} ${MORIS_${TPL}_INCLUDE_DIRS})
	    target_link_libraries(${LINALG}
	    	PRIVATE ${MORIS_${TPL}_LIBRARIES} ${MORIS_${TPL}_TARGETS})
	    target_compile_definitions(${LINALG}
	    	PRIVATE ${MORIS_${TPL}_DEFINITIONS})
	endforeach()
endif()

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Linear Algebra Config Files

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Linear Algebra Installation

# Install header files
install(FILES ${HEADERS}
    DESTINATION ${HEADER_INSTALL_DIR}/${LINALG} )

install(TARGETS ${LINALG}-lib
	EXPORT ${LINALG}Targets
	ARCHIVE DESTINATION ${LIB_INSTALL_DIR}/${LINALG}
    LIBRARY DESTINATION ${LIB_INSTALL_DIR}/${LINALG}
    RUNTIME DESTINATION ${EXE_INSTALL_DIR}/${LINALG} )

install(EXPORT ${LINALG}Targets 
	DESTINATION ${CONFIG_INSTALL_DIR}/${LINALG} )
