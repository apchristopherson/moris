#
# Copyright (c) 2022 University of Colorado
# Licensed under the MIT license. See LICENSE.txt file in the MORIS root for details.
#
#------------------------------------------------------------------------------------
#

namespace moris {

/** \defgroup SpAlgPetsc Outline of Petsc Solver

This page will summarize how to use Petsc solver.

@section SpAlgPetscModel Sample Model

In this page, solution method of a linear system Ax=b using Petsc 
is explained,
assyming the following 1D bar system (4 nodes, 3 elements).

@include distlinalg/fn_distlinsolve_petsc_1Dmodel.inc

@section SpAlgPetscForm Petsc Format

Following typedefs are used in unit tests of Petsc solver 
for the generic coding style.

@code{.cpp}
typedef Vec         distvec;   // Petsc vector
typedef Mat         distmat;   // Pestc matrix
typedef PetscInt    distint;   // Petsc integer
typedef PetscScalar distreal;  // Petsc real
@endcode

@section SpAlgPetscInit Initialization of Petsc

Initialization process of Petsc is as follows. Vectors "x" and "b" and 
a linear system matrix "A" should be defined by Petsc type format.
As KSP direct solver is used in the unit tests, 
initialization of KSP environment is necessary.
PC means preconditioner type of Petsc. 
After stating these parameters, initialization is performed 
by PetscInitialize.

@include distlinalg/fn_distlinsolve_petsc_init.inc

@section SpAlgPetscAllocVec Initialization of Solution and RHS Vectors

Initialization of Petsc vector is as follows. First, solution vector is created 
by VecCreate function and RHS vector is duplicated by VecDuplicate function.
The second section is related to parallel solver. 
The final sectoin is the initialization of solution vector (set to zero).

@include distlinalg/fn_distlinsolve_petsc_setvec.inc

Even if assembly part is not necessary for Petsc vectors, 
VecAssemblyBegin and VecAssemblyEnd should be called 
at the end of the initialization like the above sample code.

@code{.cpp}
VecAssemblyBegin(x);
VecAssemblyEnd(x);
@endcode

@section SpAlgPetscAllocMat Initialization of a Linear System Matrix

Initialization Petsc matrix is as follows. Matrix "A" is initialized 
by Petsc function: MatCreateSeqAIJ. 

@include distlinalg/fn_distlinsolve_petsc_setmat.inc

Arguments of MatCreateSeqAIJ is as follows.
- 1: MPI communicator
- 2: number of rows
- 3: number of columns
- 4: number of nonzeros per row (same for all rows)
- 5: array containing the number of nonzeros in the various rows
- 6: initialized matrix "A"

@section SpAlgPetscKSPDirect Direct Solver using KSP

After assembling a system matrix "A" and a RHS vector "b", 
solution vector "x" is computed by KSP direct solver in this case.
First KSP environment is set. "ksp" includes preconditioner
(standard LU preconditioner is used in this case) and matrix "A".
Then solution vector is computed by KSPSolve function.

@include distlinalg/fn_distlinsolve_petsc_kspdirect.inc

@section SpAlgPetscFin Finalization of Petsc

Before finishing Petsc solver, 
it is necessary to destroy Petsc vector and matrix, and 
KSP environment to free allocated memory.
After that, Petsc is finished by PetscFinalize function.

@include distlinalg/fn_distlinsolve_petsc_fin.inc

*/

}


