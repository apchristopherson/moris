#
# Copyright (c) 2022 University of Colorado
# Licensed under the MIT license. See LICENSE.txt file in the MORIS root for details.
#
#------------------------------------------------------------------------------------
#

namespace moris {

// Level 3 module

/** \defgroup STK_FEM_Workflow  STK_FEM_Workflow
This section details STK_FEM Workflow in MORIS. It shows functional utility of each module as a part of workflow and how each module \n
interacts/communicates with each other. This workflow is particularly suited for fluid oscillation problem which requires bodyfitted meshing strategy. \n
Since this workflow does not utilize MIG module, one requires commercial package such as Cubit to define boundary sidesets.

<BR>

@section WorkFlow-Network

See below figure for graphical network representation of STK-FEM Workflow.
\image html "STK_FEM_Wrkl.png" "STK_FEM Workflow" width=50%

Per figure above, the current workflow consists of two performers, MTK_Performer and MDL_Performer.

See the table below to see the function call of each module within input.cpp file through header files.

<BR>

@section Header-Call

<table>
<caption id = "Function call of Workflow Module"> Function call in Workflow</caption>
<tr><th> Module </th>               <th> Header Calls</th></tr>
<tr><td> STK_Parameter_List </td>   <td> fn_PRM_STK_Parameters.hpp</td></tr>
<tr><td> FEM_Parameter_List </td>   <td> fn_PRM_FEM_Parameters.hpp</td></tr>
</table>

<BR>

@section Workflow-Performance

<b>Initializer:</b>

Initialize module takes ADVs, upper bound, lower bound and their indicial notations.



<b>Performer:</b>

Two performers are constructed to solve physics problem. MTK performer generates MTK mesh from STK mesh. STK mesh is generated by MTK mesh pair using Integrated \n
and Interpolated mesh. \n

MTK Mesh is then passed on to MDL performer, where it evaluates the model and solve for the problem. IQIs are then communicated to FEM. \n

<BR>

@section Example

<b>Example:</b> Fluidic Oscillator Problem

*/
}
